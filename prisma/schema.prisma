// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String?
  role          Role      @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  accounts Account[]
  sessions Session[]
  sales    Sale[]
  purchases Purchase[]

  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  products  Product[]

  @@map("categories")
}

model Product {
  id         Int      @id @default(autoincrement())
  name       String
  sku        String   @unique
  brand      String
  costPrice  Decimal  @db.Decimal(10, 2)
  salePrice  Decimal  @db.Decimal(10, 2)
  quantity   Int
  minStock   Int      @default(5)
  categoryId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  category  Category   @relation(fields: [categoryId], references: [id])
  sales     Sale[]
  purchases Purchase[]

  @@map("products")
}

model Sale {
  id        Int      @id @default(autoincrement())
  quantity  Int
  salePrice Decimal  @db.Decimal(10, 2)
  customer  String?
  soldAt    DateTime @default(now())
  productId Int
  userId    String

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@map("sales")
}

model Purchase {
  id          Int      @id @default(autoincrement())
  quantity    Int
  costPrice   Decimal  @db.Decimal(10, 2)
  supplier    String
  purchasedAt DateTime @default(now())
  productId   Int
  userId      String

  product Product @relation(fields: [productId], references: [id])
  user    User    @relation(fields: [userId], references: [id])

  @@map("purchases")
}

enum Role {
  USER
  ADMIN
}
